getwd()
source('~/GitHub/Battery_project/soh_estimate.R', encoding = 'UTF-8')
getwd()
datapath<-"~/Data/"
data_all<-read.csv(paste(datapath,sprintf('%d_predict.csv',size),sep=""),header=T, sep=",")
size=250
data_all<-read.csv(paste(datapath,sprintf('%d_predict.csv',size),sep=""),header=T, sep=",")
data_all<-read.csv(sprintf('%d_predict.csv',size),header=T, sep=",")
getwd()
data_all<-read.csv(sprintf('Data/%d_predict.csv',size),header=T, sep=",")
data_soh<-read.csv("Data/0.5C充0.625C放电(250mAh)_2.csv",header=T, sep=",")
devtools::create("SOHEstimate")
install.packages("Rtools")
library(SOHEstimate)
newi<-sample(1:50,1)
esti<-data_all[(200*150+newi):((200*150+newi)+49),]
soh_estimate(data_in = esti)
library(SOHEstimate)
soh_estimate(data_in = esti)
help(soh_estimate)
help(SOHEstimate)
library(SOHEstimate)
library(SOHEstimate)
source('~/GitHub/Battery_project/R/soh_estimate.R', encoding = 'UTF-8')
soh_estimate(data_in = esti)
source('~/GitHub/Battery_project/R/soh_estimate.R', encoding = 'UTF-8')
soh_estimate(esti)
sum_temp
esti_len<-dim(data_in)[1] #the length of the data_in
data_in<-esti
esti_len<-dim(data_in)[1] #the length of the data_in
View(data_soh)
data_soh[,5]<-data_soh[,4]/size
distance<-matrix(rep(0,len*2),nrow=len)
len=800
elen=200
size=250
distance<-matrix(rep(0,len*2),nrow=len)
i=1
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum_temp<-0
sum<-10000
for(j in 0:(len-esti_len-1))
{
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[j+k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
j=0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[j+k,4])^2
}
sum
sum_temp
esti_len
predict(xyspline,j+k)$y
esti[j+k,4]
for(i in 1:len)
{
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum<-10000
for(j in 0:(len-esti_len-1))
{
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[j+k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
distance[i,1]<-sum
distance[i,2]<-data_all[(i*elen+1),3]
}
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[j+k,4])^2
}
j
predict(xyspline,j+k)$y
esti[j+k,4]
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
for(i in 1:len)
{
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum<-10000
for(j in 0:(len-esti_len-1))
{
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
distance[i,1]<-sum
distance[i,2]<-data_all[(i*elen+1),3]
}
library(SOHEstimate)
soh_estimate(esti)
for(i in 1:len)
{
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum<-10000
for(j in 0:(len-esti_len-1))
{
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
for(i in 1:len)
{
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum<-10000
for(j in 0:(len-esti_len-1))
{
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
for(i in 1:len)
{
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum<-10000
for(j in 0:(len-esti_len-1))
{
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
distance[i,1]<-sum
distance[i,2]<-data_all[(i*elen+1),3]
}
}
}}
for(i in 1:len)
{
x<-data_all[(1:elen),1]
y<-data_all[(i*elen+1):((i+1)*elen),4]
xyspline<-smooth.spline(x,y,cv=T)
sum<-10000
for(j in 0:(len-esti_len-1))
{
sum_temp<-0
for(k in 1:esti_len)
{
sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2
}
if(sum_temp<sum) sum<-sum_temp
}
distance[i,1]<-sum
distance[i,2]<-data_all[(i*elen+1),3]
}
library(SOHEstimate)
soh_estimate(esti)
View(data_all)
file.edit("./R/soh_estimate.r")
file.edit("DESCRIPTION")
load.all()
load_all()
help(load_all)
document()
library(devtools)
load_all()
?Sys.getlocale
load_all()
document()
check()
build()
install(pkg=".")
library（SOHEstimate）
library(SOHEstimate)
soh_estimate(esti)
load_all()
file.edit("soh_estimate.R")
file.edit("soh_estimate.r")
file.edit("soh_estimate.R")
file.edit("./R/soh_estimate.R")
load_all()
document()
check()
file.edit("NAMESPACE")
build()
getwd()
install(pkg=".")
