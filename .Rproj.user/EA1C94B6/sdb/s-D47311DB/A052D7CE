{
    "collab_server" : "",
    "contents" : "soh_estimate<-function(data_in,size=250,len=800,elen=200,...)\n{\n  #parameters for training set\n  #datapath<-\"~/Data/\"\n  \n  #read training data\n  data_all<-read.csv(sprintf('Data/%d_predict.csv',size),header=T, sep=\",\")\n  data_soh<-read.csv(sprintf(\"Data/%d_intotal.csv\",size),header=T, sep=\",\")\n  #################################\n  ##need to normalize data_soh input\n  #####################\n  #data_in should be a n*2 matrix, with time and voltage\n  esti_len<-dim(data_in)[1] #the length of the data_in\n  \n  data_soh[,5]<-data_soh[,4]/size\n  \n  #define a distance function\n  distance<-matrix(rep(0,len*2),nrow=len)\n  \n  \n  for(i in 1:len)\n  {\n    x<-data_all[(1:elen),1]\n    y<-data_all[(i*elen+1):((i+1)*elen),4]\n    xyspline<-smooth.spline(x,y,cv=T)\n    sum<-10000\n    for(j in 0:(len-esti_len-1))\n    {\n      sum_temp<-0\n      for(k in 1:esti_len)\n      {\n        sum_temp<-sum_temp+(predict(xyspline,j+k)$y-esti[k,4])^2\n      }\n      if(sum_temp<sum) sum<-sum_temp\n    }\n    distance[i,1]<-sum\n    distance[i,2]<-data_all[(i*elen+1),3]\n  }\n  distance_new<-distance[order(distance[,2]),]\n  newindex<-distance_new[2:11,3] #距离最近的10个数据的平均值作为估计值\n  data_esti<-mean(data_soh[newindex,5])\n  print(\"SOH=%.2f\",data_esti)\n}",
    "created" : 1502162879567.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "587884260",
    "id" : "A052D7CE",
    "lastKnownWriteTime" : 1502162083,
    "last_content_update" : 1502162083,
    "path" : "~/GitHub/Battery_project/R/soh_estimate.R",
    "project_path" : "R/soh_estimate.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}